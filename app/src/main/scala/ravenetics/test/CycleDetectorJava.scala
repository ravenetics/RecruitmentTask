/*
 * This Scala source file was generated by the Gradle 'init' task.
 */
package ravenetics.test

import java.util.Optional

import ravenetics.test.CycleDetector.CycleDefinition

import scala.jdk.CollectionConverters._
import scala.jdk.OptionConverters._

object CycleDetectorJava {

  case class CycleDefinitionJava[T](
                                     cycle: java.util.List[T],
                                     cycleCount: Int,
                                   )

  def findCycles[T](seq: java.util.List[T], minCycleLength: Int): Optional[CycleDefinitionJava[T]] =
    CycleDetector.findCycles(seq.asScala.toSeq, minCycleLength)
      .map { case CycleDefinition(cycle, cycleCount) => CycleDefinitionJava(cycle.asJava, cycleCount) }
      .toJava

}
